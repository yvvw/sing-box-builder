name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "version"
        required: true
        type: string
      ref:
        description: "ref"
        default: "dev-next"
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sing-box
        uses: actions/checkout@v4
        with:
          repository: 'SagerNet/sing-box'
          ref: "${{ inputs.ref }}"

      - name: Checkout builder
        uses: actions/checkout@v4
        with:
          path: builder_repo

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ^1.24

      - name: Cache legacy Go
        id: cache-legacy-go
        uses: actions/cache@v4
        with:
          path: ~/go/go_legacy
          key: go_legacy_1236

      - name: Setup legacy Go
        if: steps.cache-legacy-go.outputs.cache-hit != 'true'
        run: bash .github/setup_legacy_go.sh

      - name: Cache ghr
        uses: actions/cache@v4
        id: cache-ghr
        with:
          path: ~/go/bin/ghr
          key: ghr

      - name: Setup ghr
        if: steps.cache-ghr.outputs.cache-hit != 'true'
        run: |-
          cd $HOME
          git clone --depth=1 https://github.com/nekohasekai/ghr ghr
          cd ghr
          go install -v .

      - name: Set tag
        run: |-
          echo "HOME=$HOME" >> "$GITHUB_ENV"
          git tag v${{ inputs.version }} -f

      - name: Custom goreleaser.yaml
        run: cp builder_repo/.goreleaser.yaml .

      - name: Build
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: '~> v2'
          args: release --snapshot --clean
        env:
          GOPATH: ${{ env.HOME }}/go

      - name: Merge builds
        run: |-
          mkdir -p dist/release
          mv dist/*.{tar.gz,zip} dist/release

      - name: Remove old releases
        uses: actions/github-script@v7
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const { owner, repo } = context.repo;
            const response = await github.rest.repos.listReleases({ owner, repo });
            for (release of response.data) {
              await github.rest.repos.deleteRelease({ owner, repo, release_id: release.id });
            }

      - name: Release
        run: |-
          export PATH="$PATH:$HOME/go/bin"
          IFS='/' read -r user repo <<< "$GITHUB_REPOSITORY"
          ghr -u $user -r $repo --replace "v${{ inputs.version }}-${{ inputs.ref }}" dist/release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
